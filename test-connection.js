// =============================================
// TEST K·∫æT N·ªêI DATABASE
// =============================================

const { promisePool } = require('./config/database');

async function testConnection() {
    console.log('üîç ƒêang ki·ªÉm tra k·∫øt n·ªëi database...\n');

    try {
        // Test 1: K·∫øt n·ªëi c∆° b·∫£n
        console.log('Test 1: K·∫øt n·ªëi c∆° b·∫£n');
        const [rows1] = await promisePool.query('SELECT 1 + 1 AS result');
        console.log('‚úÖ K·∫øt n·ªëi th√†nh c√¥ng! Result:', rows1[0].result);
        console.log('');

        // Test 2: Ki·ªÉm tra database
        console.log('Test 2: Ki·ªÉm tra database');
        const [rows2] = await promisePool.query('SELECT DATABASE() AS db_name');
        console.log('‚úÖ Database hi·ªán t·∫°i:', rows2[0].db_name);
        console.log('');

        // Test 3: ƒê·∫øm s·ªë b·∫£ng
        console.log('Test 3: Ki·ªÉm tra c√°c b·∫£ng');
        const [tables] = await promisePool.query('SHOW TABLES');
        console.log(`‚úÖ S·ªë b·∫£ng trong database: ${tables.length}`);
        tables.forEach((table, index) => {
            const tableName = Object.values(table)[0];
            console.log(`   ${index + 1}. ${tableName}`);
        });
        console.log('');

        // Test 4: ƒê·∫øm d·ªØ li·ªáu
        console.log('Test 4: Ki·ªÉm tra d·ªØ li·ªáu');
        const [users] = await promisePool.query('SELECT COUNT(*) as count FROM users');
        const [categories] = await promisePool.query('SELECT COUNT(*) as count FROM categories');
        const [products] = await promisePool.query('SELECT COUNT(*) as count FROM products');
        const [orders] = await promisePool.query('SELECT COUNT(*) as count FROM orders');

        console.log(`‚úÖ S·ªë users: ${users[0].count}`);
        console.log(`‚úÖ S·ªë categories: ${categories[0].count}`);
        console.log(`‚úÖ S·ªë products: ${products[0].count}`);
        console.log(`‚úÖ S·ªë orders: ${orders[0].count}`);
        console.log('');

        // Test 5: L·∫•y 3 s·∫£n ph·∫©m m·∫´u
        console.log('Test 5: L·∫•y 3 s·∫£n ph·∫©m m·∫´u');
        const [sampleProducts] = await promisePool.query(`
            SELECT p.product_id, p.product_name, p.price, c.category_name 
            FROM products p
            JOIN categories c ON p.category_id = c.category_id
            LIMIT 3
        `);
        
        sampleProducts.forEach((product, index) => {
            console.log(`   ${index + 1}. ${product.product_name} - ${product.price.toLocaleString('vi-VN')}ƒë (${product.category_name})`);
        });
        console.log('');

        console.log('========================================');
        console.log('‚úÖ T·∫§T C·∫¢ C√ÅC TEST ƒê·ªÄU TH√ÄNH C√îNG!');
        console.log('========================================');

    } catch (error) {
        console.error('‚ùå L·ªñI:', error.message);
        console.error('');
        console.error('G·ª£i √Ω kh·∫Øc ph·ª•c:');
        console.error('1. Ki·ªÉm tra MySQL ƒë√£ ch·∫°y ch∆∞a: net start MySQL');
        console.error('2. Ki·ªÉm tra th√¥ng tin ƒëƒÉng nh·∫≠p trong config/database.js');
        console.error('3. Import database: mysql -u root -p < database_design.sql');
        console.error('4. Ki·ªÉm tra t√™n database: lag_vintage_shop');
    } finally {
        process.exit(0);
    }
}

testConnection();
